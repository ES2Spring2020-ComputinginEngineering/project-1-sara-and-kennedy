#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Mar 31 16:32:49 2020

@author: kennedymay
"""

import numpy as np
import matplotlib.pyplot as plt
import math
from numpy import cos

lengths = np.array([.53, .43, .33, .23, .13]) #creates an array of pendulum lengths in meters
time = np.linspace(0, 10, 200) #times between 0 and 10 with a time step of 0.05 seconds
g = -9.81

def pendulum(length, angle1): #function that takes length of pendulum and starting angle and then creates plots of Time vs Angluar Position, Time vs Angular Velocity, and Time vs Angular Acceleration
    angle_radians = np.radians(angle1)
    angular_frequency1 = np.radians(0)
    
    angular_frequency = np.sqrt(-g/length)
    
    angle = [angle_radians * cos(angular_frequency * i) for i in time]
    
    angular_velocity = [-angular_frequency * angle_radians * cos(angular_frequency * i) for i in time]
    
    angular_acceleration = [-angle_radians * angular_frequency ** 2 * cos(angular_frequency * i) for i in time]
    
    plt.subplot(2, 2, 1)
    plt.title("Time vs Angle for Length" + " " + str(length))
    plt.xlabel("Time (seconds)")
    plt.ylabel("Angle (radians)")
    plt.plot(time, angle)
    
    plt.subplot(2, 2, 2)
    plt.title("Time vs Velocity for Length" + " " + str(length))
    plt.xlabel("Time (seconds)")
    plt.ylabel("Velocity (radians/s)")
    plt.plot(time, angular_velocity)
    
    plt.subplot(2, 2, 3)
    plt.title("Time vs Acceleration, Length:" + " " + str(length))
    plt.xlabel("Time (seconds)")
    plt.ylabel("Acceleration (radians/s/s)")
    plt.plot(time, angular_acceleration)
    plt.tight_layout()
    plt.show

pendulum(.53, 40)